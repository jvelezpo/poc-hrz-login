'use strict';

const LIST_OF_DEPENDENCIES = [
    { name: 'newrelic', atLeast: '6.3.0', atMost: null },
    { name: '@hapi/hapi', atLeast: '19.0.0', atMost: null },
    { name: '@hapi/boom', atLeast: '9.0.0', atMost: null },
    { name: '@hapi/code', atLeast: '8.0.0', atMost: null },
    { name: '@hapi/lab', atLeast: '21.0.0', atMost: null },
    { name: '@hapi/wreck', atLeast: '17.0.0', atMost: null },
    { name: 'joi', atLeast: '17.0.0', atMost: null },
    { name: '@pager/jackrabbit', atLeast: '5.0.0', atMost: null },
    { name: '@pager/metrics-client', atLeast: '4.3.0', atMost: null },
    { name: '@pager/logger', atLeast: '5.7.0', atMost: null },
    { name: '@pager/hapi-redis', atLeast: '7.0.0', atMost: null },
    { name: 'hapi-sentry', atLeast: '1.0.0', atMost: null }
];

const LIST_OF_BACKEND_APPS = [
    'api-admin',
    'api-auth',
    'api-command-center',
    'api-config',
    'api-core',
    'api-demographics',
    'api-horizon',
    'api-insurance',
    'api-messages',
    'api-profile',
    'api-scheduling',
    'api-sdk',
    'api-telemedicine',
    'api-twilio',
    'api-users',
    'broadcast',
    'chrono-trigger',
    'command-center-worker',
    'dealer',
    'droidcast',
    'edge-api-admin',
    'edge-api-base',
    'edge-api-cc',
    'eslint-config',
    'event-sourcerer',
    'hapi-auth-armor',
    'init-containers',
    'json-schemas',
    'mailman',
    'mongoose-schemas',
    'salesman',
    'sdk-states',
    'semantic-release-config',
    'service-chat-data-migrator',
    'socker',
    'stash',
    'telemedicine-worker',
    'tenant-middleware-cambia',
    'tenant-middleware-healthsparq',
    'tenant-middleware-horizon',
    'tenant-middleware-sura',
    'webhooks',
    'worker-guest-session'
];

const LIST_OF_FRONTEND_APPS = [
    'docker-nginx-frontend',
    'enterprise-admin',
    'pager-ui-kit',
    'web-app',
    'web-command-center',
    'web-covid',
    'web-dashboard',
    'web-ea'
];

const LIST_OF_ML_APPS = [
    'alfred',
    'austero',
    'chappie',
    'docker-metabase',
    'faro',
    'horizon-transcripts',
    'linda',
    'lucy',
    'maryam',
    'scribe',
    'thalamus'
];

const LIST_OF_PLATFORM_APPS = [
    'charts',
    'docker-cloud-sdk',
    'docker-kong',
    'docker-newrelic',
    'docker-sentry',
    'environments',
    'infra',
    'pager-cli'
];

const LIST_OF_QA_APPS = [
    'api-tests',
    'google-puppeteer',
    'playwright-automation',
    'python-automation',
    'qa-pager-test'
];

const LIST_OF_ALL_APPS = [
    ...LIST_OF_BACKEND_APPS,
    ...LIST_OF_FRONTEND_APPS,
    ...LIST_OF_ML_APPS,
    ...LIST_OF_PLATFORM_APPS,
    ...LIST_OF_QA_APPS
];

const K8S_ENVIRONMENT_LIST = [
    {
        org: 'pagerinc',
        repo: 'pgr-dev'
    },
    {
        org: 'pagerinc',
        repo: 'hrz-dev'
    },
    {
        org: 'pagerinc',
        repo: 'pgr-qa'
    },
    {
        org: 'pagerinc',
        repo: 'hrz-qa'
    },
    {
        org: 'pagerinc',
        repo: 'pgr-stage'
    },
    {
        org: 'pagerinc',
        repo: 'hrz-stage'
    },
    {
        org: 'pagerinc',
        repo: 'pgr-sdx'
    },
    // {
    //     org: 'pagerinc',
    //     repo: 'pgr-prod'
    // },
    // {
    //     org: 'pagerinc',
    //     repo: 'hrz-prod'
    // },
    {
        org: 'pagerinc',
        repo: 'pgr-rr'
    },
    {
        org: 'pagerinc',
        repo: 'sra-prod'
    },
    {
        org: 'pagerinc',
        repo: 'cox-prod'
    }
];

const K8S_ENVIRONMENTS_RELEASES = K8S_ENVIRONMENT_LIST.map((item) => item.repo);

const APTIBLE_ENVIRONMENT_LIST = [
    {
        name: 'horizon-production'
    },
    {
        name: 'pager-production'
    }
];

const APTIBLE_ENVIRONMENT_NAMES = APTIBLE_ENVIRONMENT_LIST.map((item) => item.name);

module.exports = {
    K8S_ENVIRONMENT_LIST,
    K8S_ENVIRONMENTS_RELEASES,
    LIST_OF_DEPENDENCIES,
    LIST_OF_BACKEND_APPS,
    LIST_OF_FRONTEND_APPS,
    LIST_OF_ML_APPS,
    LIST_OF_PLATFORM_APPS,
    LIST_OF_QA_APPS,
    LIST_OF_ALL_APPS,
    APTIBLE_ENVIRONMENT_LIST,
    APTIBLE_ENVIRONMENT_NAMES
};
